:root {
  --main-light-color: #fbfbfb;
  --main-dark-color: #333;
  --danger: #dc3545
}

html, body {
  font-family: 'Open sans', "sans-serif";
  font-size: 14px;
  margin: 0;
  min-height: 400px;
  padding: 0;
  width: 300px;
}

#app.dark {
  background-color: var(--main-dark-color);
  color: var(--main-light-color);
}

#app {
  background-color: var(--main-light-color);
  color: var(--main-dark-color);;
}

h1 {
  font-family: "Menlo", monospace;
  font-size: 22px;
  font-weight: 400;
  margin: 0;
  color: #ff0a0a;
}

a:link, a:visited {
  color: #000;
  outline: 0;
  text-decoration: none;
}

img {
  width: 30px;
}

.modal-header {
  align-items: center;
  /* border-bottom: 0.5px solid #dadada; */
}

.modal-content {
  padding: 0 22px;
}

.modal-icons {
  /* border-top: 0.5px solid #dadada; */
  height: 50px;
  width: 100%;
}

.logo {
  padding: 16px;
}

.logo-icon {
  vertical-align: text-bottom;
  margin-right: 12px;
}

.version {
  color: #444;
  font-size: 18px;
}

.flex-container {
  display: flex;
  justify-content: center;
  padding: 10px 22px;
}

.flex {
  opacity: 1;
  /* flex-direction: column; */
  justify-content: space-between;
  display: flex;
  transition: opacity 0.2s ease-in-out;
  width: 50px;
}

.flex .flex-item {
  cursor: pointer;
}

.fa-youtube {
  color: #FF0000;;
}

.fa-facebook-square {
  color: #4267b2;
}

.dark .fa-youtube {
  color: #fff;
}

.dark .fa-facebook-square {
  color: #fff;
}

.flex.active {
  opacity:  0.4;
}

.flex .fa {
  font-size: 24px;
  /* color: #2f5876; */
}

.options-item {
  margin: 5px 0;
}

.options-item label {
  margin: 0;
  cursor: pointer;
}

.execute-btn {
  margin: 10px auto;
  display: flex;
  justify-content: center;
}

.execute-btn .btn {
  width: 60px;
  height: 30px;
  font-size: 16px;
  font-weight: 500;
  cursor: pointer;
  outline: none;
  border: 0;
  background-color: var(--main-dark-color);
  color: var(--main-light-color);
}

.dark .execute-btn .btn {
  background-color: var(--main-light-color);
  color: var(--main-dark-color);
  transition: box-shadow 0.4s ease-in-out;
}

.execute-btn .btn#execute:hover {
  box-shadow: 0px 0px 2px 1px rgba(0,0,0,0.6);
  transition: box-shadow 0.4s ease-in-out;
}

.dark .execute-btn .btn#execute:hover {
  box-shadow: 0px 0px 2px 1px rgba(251,251,251,0.6);
  transition: box-shadow 0.4s ease-in-out;
}

.execute-btn .btn:disabled {
  cursor: not-allowed;
}

.btn#stop {
  background-color: var(--danger);
  color: var(--main-light-color);
}

.execute-btn .btn#stop:hover {
  box-shadow: 0px 0px 2px 1px rgba(220,53,69,0.6);
  transition: box-shadow 0.4s ease-in-out;
}

.d-flex {
  display: flex !important;
}

.flex-column {
  flex-direction: column !important;
}

hr { 
  display: block; 
  height: 1px;
  border: 0; 
  border-top: 1px solid #ccc;
  margin: 1em 0; 
  padding: 0; 
}

input:disabled {
  cursor: not-allowed;
}

input:disabled + label {
  cursor: not-allowed;
}


/*####################
######################
######################*/

/* dark mode icon style */
  .headerButtonDKM {
    display: inline-block;
    height: 46px;
    width: 46px;
  }
  
  .firsLabelDKM {
    cursor: pointer;
    display: flex;
    margin: 0;
    height: 100%;
    width: 100%;
    justify-content: center;
    align-items: center;
  }
  .firsLabelDKM input[type="checkbox"] {
    visibility: hidden;
    opacity: 0;
    position: absolute;
  }
  .firsLabelDKM input[type="checkbox"] ~ label {
    width: 80%;
    height: 80%;
    display: flex;
    background: #e5e5e5;
    border-radius: 50% !important;
    margin: 0;
    justify-content: center;
    align-items: center;
    position: relative;
    z-index: -9;
    transition: all 0.5s;
  }
  .firsLabelDKM input[type="checkbox"] ~ label span {
    transition: all 0.5s;
  }
  .firsLabelDKM input[type="checkbox"] ~ label span:nth-child(1) {
    width: 45%;
    height: 45%;
    display: block;
    background: #5f6368;
    border-radius: 50% !important;
    border: 2px solid #dadada;
    position: relative;
    transition: all 0.5s;
  }
  .firsLabelDKM input[type="checkbox"] ~ label span:nth-child(n + 2):nth-child(-n + 5) {
    height: 80%;
    width: 8%;
    display: block;
    position: absolute;
    background: #5f6368;
    z-index: -9;
    border-radius: 50% !important;
    transition: all 0.5s;
  }
  .firsLabelDKM input[type="checkbox"] ~ label span:nth-child(3) {
    transform: rotate(90deg);
  }
  .firsLabelDKM input[type="checkbox"] ~ label span:nth-child(4) {
    transform: rotate(45deg);
  }
  .firsLabelDKM input[type="checkbox"] ~ label span:nth-child(5) {
    transform: rotate(-45deg);
  }
  .firsLabelDKM input[type="checkbox"]:checked ~ label {
    background: #798996;
    transition: all 0.5s;
  }
  .firsLabelDKM input[type="checkbox"]:checked ~ label span {
    transition: all 0.5s;
  }
  .firsLabelDKM input[type="checkbox"]:checked ~ label span:nth-child(1) {
    background: #798996;
    height: 60%;
    width: 60%;
    box-shadow: inset 5px -5px 0px 2px #ffffff;
    border: 0;
    transition: all 0.5s;
  }
  .firsLabelDKM input[type="checkbox"]:checked ~ label span:nth-child(n + 2):nth-child(-n + 5) {
    height: 0%;
    width: 0%;
    transition: all 0.5s;
  }
  .firsLabelDKM.colored input[type="checkbox"] ~ label {
    background: radial-gradient(#3f51b5, #00bcd4);
  }
  .firsLabelDKM.colored input[type="checkbox"] ~ label span:nth-child(1) {
    border-color: #197ca9;
  }
  .firsLabelDKM.colored input[type="checkbox"] ~ label span:nth-child(1n + 1) {
    background: radial-gradient(#ffbf00, #ff9800);
  }
  .firsLabelDKM.colored input[type="checkbox"]:checked ~ label {
    background: #001280;
  }
  .firsLabelDKM.colored input[type="checkbox"]:checked ~ label span:nth-child(1) {
    background: radial-gradient(#000838, #00169c);
  }
  
  /* The container */
.container-checkbox {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.container-checkbox input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Create a custom checkbox */
.container-checkbox .checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
}

/* On mouse-over, add a grey background color */
.container-checkbox:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.container-checkbox input:checked ~ .checkmark {
  background-color: #2196F3;
}

/* Create the checkmark/indicator (hidden when not checked) */
.container-checkbox .checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.container-checkbox input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.container-checkbox .checkmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}


/* The container */
.container-radio {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default radio button */
.container-radio input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Create a custom radio button */
.container-radio .checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
  border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.container-radio:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the radio button is checked, add a blue background */
.container-radio input:checked ~ .checkmark {
  background-color: #2196F3;
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.container-radio .checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the indicator (dot/circle) when checked */
.container-radio input:checked ~ .checkmark:after {
  display: block;
}

/* Style the indicator (dot/circle) */
.container-radio .checkmark:after {
 top: 9px;
left: 9px;
width: 8px;
height: 8px;
border-radius: 50%;
background: white;
}